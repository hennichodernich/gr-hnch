/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(triggered_wavfile_source.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(865c88aa86208c3758b7d9e52a696758)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <hnch/triggered_wavfile_source.h>
// pydoc.h is automatically generated in the build directory
#include <triggered_wavfile_source_pydoc.h>

void bind_triggered_wavfile_source(py::module& m)
{

    using triggered_wavfile_source    = ::gr::hnch::triggered_wavfile_source;


    py::class_<triggered_wavfile_source, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<triggered_wavfile_source>>(m, "triggered_wavfile_source", D(triggered_wavfile_source))

        .def(py::init(&triggered_wavfile_source::make),
           py::arg("filename"),
           py::arg("retrigger") = false,
           D(triggered_wavfile_source,make)
        )
        




        
        .def("sample_rate",&triggered_wavfile_source::sample_rate,       
            D(triggered_wavfile_source,sample_rate)
        )


        
        .def("bits_per_sample",&triggered_wavfile_source::bits_per_sample,       
            D(triggered_wavfile_source,bits_per_sample)
        )


        
        .def("channels",&triggered_wavfile_source::channels,       
            D(triggered_wavfile_source,channels)
        )

        ;




}








